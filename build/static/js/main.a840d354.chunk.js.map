{"version":3,"sources":["features/userSlice.js","HeaderOption.js","firebase.js","Header.js","Sidebar.js","InputOption.js","Post.js","Feed.js","Login.js","Widgets.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["userSlice","createSlice","name","initialState","user","reducers","login","state","action","payload","logout","actions","selectUser","HeaderOption","avatar","Icon","title","onClick","useSelector","className","Avatar","src","photoUrl","email","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","Header","dispatch","useDispatch","alt","width","height","type","placeholder","HomeIcon","SupervisorAccountIcon","BusinessCenterIcon","ChatIcon","NotificationsIcon","signOut","Sidebar","recentItem","topic","displayName","InputOption","color","style","Post","forwardRef","ref","description","message","ThumbUpAltOutlinedIcon","ChatOutlinedIcon","ShareOutlinedIcon","SendOutlinedIcon","Feed","useState","input","setInput","posts","setPosts","useEffect","collection","orderBy","onSnapshot","snapshot","docs","map","doc","id","data","value","onChange","e","target","preventDefault","add","timestamp","FieldValue","serverTimestamp","ImageIcon","SubscriptionsIcon","EventNoteIcon","CalendarViewDayIcon","Login","setEmail","password","setPassword","setName","profilePic","setProfilePic","signInWithEmailAndPassword","then","userAuth","uid","profileUrl","photoURL","catch","error","alert","createUserWithEmailAndPassword","updateProfile","Widgets","newsArticle","heading","subtitle","App","onAuthStateChanged","store","configureStore","reducer","userReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a840d354.chunk.js","sourcesContent":["import {createSlice } from '@reduxjs/toolkit';\n\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState:{\n    user:null,\n  },\n  reducers: {\n    login: (state, action) => {\n      state.user = action.payload;\n    },\n    logout: (state) => {\n      state.user = null;\n    },\n  },\n});\n\nexport const { login, logout } = userSlice.actions;\n\n//selectors\nexport const selectUser = (state) => state.user.user;\n\nexport default userSlice.reducer;\n","import { Avatar } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { selectUser } from './features/userSlice';\r\nimport './headerOption.css'\r\n\r\nexport default function HeaderOption({ avatar, Icon, title, onClick }) {\r\n    const user = useSelector(selectUser);\r\n\r\n    return <div onClick={onClick} className=\"headerOption\">\r\n        {Icon && <Icon className='headerOption__icon' />}\r\n        {avatar && <Avatar className=\"headerOption__icon\" src={user?.photoUrl}>\r\n            {user?.email[0]}\r\n            </Avatar>}\r\n        <h3 className=\"headerOption__title\">{title}</h3>\r\n    </div>\r\n\r\n}\r\n","// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nimport firebase from 'firebase'\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDePoHSUMtpabUfkIKi9VIFvGvcSl9dArY\",\r\n    authDomain: \"linkedin-clone-a745c.firebaseapp.com\",\r\n    projectId: \"linkedin-clone-a745c\",\r\n    storageBucket: \"linkedin-clone-a745c.appspot.com\",\r\n    messagingSenderId: \"702543994116\",\r\n    appId: \"1:702543994116:web:ccd972aaf86b68f4e78451\",\r\n    measurementId: \"G-080CFWHV8T\"\r\n  };\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\nconst db = firebaseApp.firestore();\r\nconst auth= firebase.auth();\r\n\r\nexport {db, auth};","import React from 'react';\r\nimport './Header.css';\r\nimport HeaderOption from './HeaderOption';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\r\nimport BusinessCenterIcon from '@material-ui/icons/BusinessCenter';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { auth } from './firebase';\r\nimport { logout, selectUser } from './features/userSlice';\r\n\r\nexport default function Header() {\r\n    const dispatch = useDispatch();\r\n    const logoutOfApp = ()=> {\r\n        dispatch(logout())\r\n        auth.signOut();\r\n    };\r\n    return (\r\n        <div className='header'>\r\n            <div className=\"header__left\">\r\n                <img src=\"https://img.icons8.com/color/48/000000/linkedin.png\" alt=\"\" width=\"50px\" height=\"50px\"/>\r\n                <div className=\"header__search\">\r\n                    <SearchIcon />\r\n                    <input type=\"text\" placeholder=\"Search\"/>\r\n                </div>\r\n            </div>\r\n            <div className=\"header__right\">\r\n                <HeaderOption Icon={HomeIcon} title=\"Home\" />\r\n                <HeaderOption Icon={SupervisorAccountIcon} title=\"My Network \" />\r\n                <HeaderOption Icon={BusinessCenterIcon} title=\"Jobs\" />\r\n                <HeaderOption Icon={ChatIcon} title=\"Messaging\" />\r\n                <HeaderOption Icon={NotificationsIcon} title=\"Notification\" />\r\n                <HeaderOption avatar={true} title=\"Me\"\r\n                onClick={logoutOfApp} />\r\n                \r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n ","import { Avatar } from '@material-ui/core';\r\nimport React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { selectUser } from './features/userSlice';\r\nimport './Sidebar.css';\r\n\r\nfunction Sidebar() {\r\n    const user = useSelector(selectUser);\r\n    const recentItem = (topic) => (\r\n        <div className=\"sidebar__recentItem\">\r\n            <span className=\"sidebar__hash\">#</span>\r\n            <p>{topic}</p>\r\n        </div>\r\n    );\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <div className=\"sidebar__top\">\r\n                <img src=\"https://images.unsplash.com/photo-1579546929662-711aa81148cf?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1050&q=80\" alt=\"\" />\r\n                <Avatar src={user.photoUrl} className=\"sidebar__avatar\" >\r\n                    {user.email[0]}\r\n                </Avatar>\r\n                <h2>{user.displayName}</h2>\r\n                <h4>{user.email}</h4>\r\n            </div>\r\n            <div className=\"sidebar__stats\">\r\n                <div className=\"sidebar__stat\">\r\n                    <p>Who viwed your</p>\r\n                    <p className=\"sidebar__statNumber\">2,411</p>\r\n                </div>\r\n                <div className=\"sidebar__stat\">\r\n                    <p>Views on post</p>\r\n                    <p className=\"sidebar__statNumber\">5,411</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"sidebar__bottom\">\r\n                    <p>Recent</p>\r\n                    {recentItem('reactjs')}\r\n                    {recentItem('programming')}\r\n                    {recentItem('webd')}\r\n                    {recentItem('softwareengineering')}\r\n                    {recentItem('design')}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","import React from 'react'\r\nimport './InputOption.css'\r\n\r\nfunction InputOption({Icon,title,color}) {\r\n    return (\r\n        <div className=\"inputOption\">\r\n            <Icon style={{color:color}}/>\r\n            <h4>{title}</h4>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InputOption\r\n\r\n","import { Avatar } from '@material-ui/core'\r\nimport React,{forwardRef} from 'react'\r\nimport InputOption from './InputOption'\r\nimport './Post.css'\r\nimport ThumbUpAltOutlinedIcon from '@material-ui/icons/ThumbUpAltOutlined';\r\nimport ChatOutlinedIcon from '@material-ui/icons/ChatOutlined';\r\nimport ShareOutlinedIcon from '@material-ui/icons/ShareOutlined';\r\nimport SendOutlinedIcon from '@material-ui/icons/SendOutlined';\r\n\r\nconst  Post = forwardRef(({ name, description, message, photoUrl } ,ref) => {\r\n    return (\r\n        <div ref={ref} className=\"post\">\r\n            <div className=\"post__header\">\r\n                <Avatar src={photoUrl}></Avatar>\r\n                {/* {name[0]} */}\r\n                <div className=\"post__info\">\r\n                    <h2>{name}</h2>\r\n                    <p>{description}</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"post__body\">\r\n                    <p>{message}</p>\r\n            </div>\r\n            <div className=\"post__bottom\">\r\n                <InputOption Icon={ThumbUpAltOutlinedIcon} title=\"Like\" color=\"Gray\"/>\r\n                <InputOption Icon={ChatOutlinedIcon} title=\"Comment\" color=\"Gray\"/>\r\n                <InputOption Icon={ShareOutlinedIcon} title=\"Share\" color=\"Gray\"/>\r\n                <InputOption Icon={SendOutlinedIcon} title=\"Send\" color=\"Gray\"/>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n})\r\n\r\nexport default Post\r\n","import React,{useEffect, useState} from 'react'\r\nimport './Feed.css'\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport InputOption from './InputOption';\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport SubscriptionsIcon from '@material-ui/icons/Subscriptions';\r\nimport EventNoteIcon from '@material-ui/icons/EventNote';\r\nimport CalendarViewDayIcon from '@material-ui/icons/CalendarViewDay';\r\nimport Post from './Post';\r\nimport {db}  from './firebase';\r\nimport firebase from 'firebase';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectUser } from './features/userSlice';\r\nimport FlipMove from 'react-flip-move';\r\n\r\nfunction Feed() {\r\n    const user = useSelector(selectUser);\r\n    const [input,setInput]=useState('');\r\n    const [posts, setPosts] = useState([]);\r\n\r\n    useEffect(()=> {\r\n        db.collection(\"posts\").orderBy('timestamp','desc').onSnapshot(snapshot =>(\r\n            setPosts(snapshot.docs.map(doc=>(\r\n                {\r\n                    id:doc.id,\r\n                    data:doc.data(),\r\n                }\r\n            )))\r\n        ))\r\n    },[])\r\n    const sendPost = (e) => {\r\n        e.preventDefault();\r\n        db.collection('posts').add({\r\n            name: user.displayName,\r\n            description : user.email,\r\n            message : input,\r\n            photoUrl:user.photoUrl || '',\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp()\r\n        })\r\n        setInput('');\r\n    };\r\n\r\n    return (\r\n        <div className=\"feed\">\r\n            <div className=\"feed__inputcontainer\">\r\n                <div className=\"feed_input\">\r\n                    <CreateIcon/>\r\n                    <form>\r\n                        <input value={input} onChange={e => setInput(e.target.value)} type=\"text\"/>\r\n                        <button onClick={sendPost} type=\"submit\">Send</button>\r\n                    </form>\r\n                </div>\r\n                <div className=\"feed_inputOptions\">\r\n                    <InputOption Icon={ImageIcon} title='Photo' color=\"rgb(73 164 221)\"/>\r\n                    <InputOption Icon={SubscriptionsIcon} title='Video' color=\"#7fc15e\"/>\r\n                    <InputOption Icon={EventNoteIcon} title='Event' color=\"#e7a33e\"/>\r\n                    <InputOption Icon={CalendarViewDayIcon} title='Write Artical' color=\"#fc9295\"/>\r\n                </div>\r\n            </div>\r\n            {/* {post} */}\r\n            <FlipMove>\r\n            {posts.map(({id , data: {name,description,message,photoUrl}}) => (\r\n                <Post \r\n                key={id}\r\n                name={name}\r\n                description={description}\r\n                message={message}\r\n                photoUrl={photoUrl}\r\n                \r\n                />\r\n            ))}\r\n            </FlipMove>\r\n            \r\n\r\n            {/* <Post name='Vaishno pops' description='This is just a test' message='This s msg'/> */}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Feed\r\n","import React, { useState } from 'react'\r\nimport './Login.css'\r\nimport { auth } from './firebase'\r\nimport { useDispatch } from 'react-redux';\r\nimport { login } from './features/userSlice';\r\n\r\nfunction Login() {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [name, setName] = useState('');\r\n    const [profilePic, setProfilePic] = useState('');\r\n    const dispatch = useDispatch();\r\n\r\n    const loginToApp = (e) => {\r\n        e.preventDefault();\r\n        auth.signInWithEmailAndPassword(email,password).then(userAuth => {\r\n            dispatch(login({\r\n                        email: userAuth.user.email,\r\n                        uid: userAuth.user.uid,\r\n                        displayName: userAuth.user.displayName,\r\n                        profileUrl:userAuth.user.photoURL,\r\n            }));\r\n        }).catch((error) => alert(error));\r\n    };\r\n\r\n    const register = () => {\r\n        if (!name) {\r\n            return alert('please Enter Name !! ');\r\n        }\r\n        auth.createUserWithEmailAndPassword(email, password).then((userAuth) => {\r\n            userAuth.user.updateProfile({\r\n                displayName: name,\r\n                photoURL: profilePic,\r\n            })\r\n                .then(() => {\r\n                    dispatch(login({\r\n                        email: userAuth.user.email,\r\n                        uid: userAuth.user.uid,\r\n                        displayName: name,\r\n                        photoUrl: profilePic,\r\n                    }));\r\n                });\r\n        }).catch((error) => alert(error));\r\n    };\r\n   \r\n    return (\r\n        <div className=\"login\">\r\n            <img src=\"https://www.technipages.com/wp-content/uploads/2020/09/LinkedIn-Does-Not-Load-Images-fix.jpg\" alt=\"\" />\r\n            <form>\r\n                <input value={name} onChange={e => setName(e.target.value)} placeholder=\"Full Name\" type=\"text\"></input>\r\n                <input value={profilePic} onChange={(e) => setProfilePic(e.target.value)} placeholder=\"Profile Pic URL\" type=\"text\"></input>\r\n                <input value={email} onChange={(e) => setEmail(e.target.value)} placeholder=\"Email\" type=\"email\"></input>\r\n                <input value={password} onChange={e => setPassword(e.target.value)} placeholder=\"Password\" type=\"password\"></input>\r\n                <button type='submit' onClick={loginToApp}>Sign In</button>\r\n            </form>\r\n            <p>Not a Member?\r\n                <span className=\"login__register\" onClick={register}>Register Now</span>\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;\r\n\r\n","import React from 'react'\r\nimport './Widgets.css'\r\nimport InfoRoundedIcon from '@material-ui/icons/InfoRounded';\r\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\r\n\r\nfunction Widgets() {\r\n    const newsArticle= (heading ,subtitle)=>(\r\n        <div className=\"widgets__article\">\r\n             <div className=\"widgets__articleLeft\">\r\n             <FiberManualRecordIcon/>\r\n             </div>\r\n             <div className=\"widgets__articleRight\">\r\n             <h4>{heading}</h4>\r\n             <p>{subtitle}</p>\r\n             </div>\r\n        </div>\r\n    );\r\n    return (\r\n        <div className=\"widgets\">\r\n            <div className=\"widgets__header\">\r\n                <h2>Linkedin News</h2>\r\n                <InfoRoundedIcon />\r\n            </div>\r\n            {newsArticle(\"VAIHSNO\",\"TOP NEWS - 9999 readers\")}\r\n            {newsArticle(\"CORONA\",\"INDIA NEWS - Dangerous Virus\")}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Widgets\r\n","import React, { useEffect } from 'react';\nimport './Header.css';\nimport './App.css';\nimport Header from './Header';\nimport Sidebar from './Sidebar';\nimport Feed from './Feed';\nimport { login, logout, selectUser } from './features/userSlice';\nimport Login from './Login';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { auth } from './firebase';\nimport Widgets from './Widgets';\n\nfunction App() {\n\n  const user = useSelector(selectUser);\n  const dispatch = useDispatch();\n\n  useEffect(()=> {\n    auth.onAuthStateChanged((userAuth) => {\n      if(userAuth){\n        //user logged in\n        dispatch(login({\n          email: userAuth.email,\n          uid: userAuth.uid,\n          displayName: userAuth.displayName,\n          photoUrl: userAuth.photoURL,\n        }));\n      }\n      else{\n        //user logged out\n        dispatch(logout());\n      }\n    })\n  },[])\n  return (\n    <div className=\"App\">\n      <Header />\n      {!user ? (<Login />) :\n        (\n          <div className=\"app__body\">\n            <Sidebar />\n            <Feed />\n            <Widgets />\n          </div>\n        )}\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport userReducer from '../features/userSlice';\n\nexport const store = configureStore({\n  reducer: {\n    user: userReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}